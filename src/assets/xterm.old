<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="Content-type" content="text/html;charset=UTF-8">
  <title>Debug Console</title>
  <link rel="stylesheet" href="./dist/css/xterm.css" />
  <style>
    body, html { margin: 0; padding: 0; height: 100%; background-color: #000; scrollbar-width: none; overflow-x: hidden;}
    #terminal { width: 100%; height: 100%; }
  </style>
</head>
<body>
  <div id="terminal"></div>
  <script src="./dist/js/xterm.js"></script>
  <script>
    const terminal = new Terminal({ cursorBlink: true, fontSize: 14, theme: { background: '#000', foreground: '#fff' } });
    terminal.open(document.getElementById('terminal'));

    const params = new URLSearchParams(window.location.search);
    const namespace = params.get('namespace');
    const vm = params.get('vm');

    const wsURL = "/k8s/apis/subresources.kubevirt.io/v1alpha3/namespaces/" + namespace + "/virtualmachineinstances/" + vm + "/console";
    const socket = new WebSocket(wsURL);
    socket.binaryType = "arraybuffer";

    socket.onopen = () => terminal.writeln('🔗 WebSocket connected...');

    socket.onerror = (e) => { terminal.writeln('❌ Failure in WebSocket.'); console.error(e); };
    socket.onclose = () => terminal.writeln('\r\n🔌 Connection closed.');

    socket.onmessage = (event) => {
      const data = new Uint8Array(event.data);

      try {
        const text = new TextDecoder().decode(data);
        terminal.write(text);
      } catch (e) {
        terminal.write(`[RAW:${data.join(",")}]`);
      }
    };

    terminal.onData((data) => {
      const encoder = new TextEncoder();
      const payload = encoder.encode(data);
      socket.send(payload);
    });
  </script>
</body>
</html>
